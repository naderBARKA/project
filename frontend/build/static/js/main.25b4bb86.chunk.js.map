{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Users/UsersList.js","components/Common/Home.js","components/Common/Register.js","components/Common/Login.js","components/templates/Navbar.js","components/Users/Profile.js","components/Users/EditProfile.js","components/private-route/PrivateRoute.js","components/Users/Dashboard.js","components/Applicant/AddEducation.js","components/Applicant/JobsList.js","components/Applicant/MyApplications.js","components/Recruiter/CreateJob.js","components/Recruiter/MyActiveJobs.js","components/Recruiter/AppList.js","components/Recruiter/Employees.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","isEmpty","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","devToolsExtension","f","UsersList","props","users","sortedUsers","sortName","renderIcon","bind","sortChange","get","then","response","setState","data","catch","error","console","log","array","this","flag","sort","a","b","undefined","date","Date","Grid","container","item","xs","md","lg","Paper","Table","TableHead","TableRow","TableCell","Button","onClick","TableBody","map","ind","key","substring","name","email","Component","Home","className","Jumbotron","fluid","Container","to","renderAs","style","width","borderRadius","letterSpacing","marginTop","src","Register","onChange","e","target","id","value","onSubmit","preventDefault","skills","role","length","split","newUser","password","password2","phone_number","registerUser","history","NaN","handleChange","event","push","nextProps","RoleForm","userRole","htmlFor","placeholder","color","paddingLeft","noValidate","classnames","invalid","connect","userData","post","res","alert","err","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","NavBar","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Profile","onLogoutClick","userdetails","showform","editing","school","degree","startdate","file","enddate","delEducation","editEducation","editEducationSubmit","onBack","ed","idToRemove","_id","education","filter","put","location","reload","show","editid","toString","idToChange","findIndex","x","UserDetails","skill","Tooltip","title","aria-label","weight","display","marginLeft","bio","Card","Header","Body","Title","Text","EditProfile","validate","nameError","emailError","bioError","includes","euser","skillsstring","editedUser","resume","jobs","recruiter","forEach","jobb","editJob","recruiterName","recruiterEmail","EditUserDetails","fontSize","component","rest","render","Dashboard","UserOptions","fontFamily","AddEducation","g1","g2","newEducation","userDetails","newed","JobsList","onFilter","jobTypeVal","jobTypeFilterVal","salaryMinVal","salaryFilterMinVal","salaryMaxVal","salaryFilterMaxVal","durationVal","durationFilterVal","parseInt","filteredJobs","extraJobs","salary","duration","onSearch","searchval","sval","result","Fuse","keys","search","n","i","applications","enteredsop","sopError","sortbysalary","sortbyduration","sortbyrating","renderSalaryIcon","renderDurationIcon","renderRatingIcon","sortBySalary","sortByDuration","sortByRating","apply","onSOPsubmit","rating","job","jobId","applicantId","status","numapp","working","goBack","newApplication","recruiterId","stage","sop","editApplicant","num","soperror","editting","AllJobs","monthNames","List","ListItem","text","TextField","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","getTime","deadline","dateOfPost","getDate","getMonth","getFullYear","toFixed","applied","numpos","posmax","appmax","MyApplications","giveRating","sortedJobs","application","getjob","nrate","numrate","editApplication","AppliedJobs","doj","rated","Rating","rate","height","CreateJob","titleError","typeError","durationError","salaryError","addressError","deadlineError","appmaxError","address","skillstr","durationstr","newJob","description","app","AddJob","min","MyActiveJobs","deljob","editJobSubmit","applicationsArray","usersArray","delete","appli","editEmployee","applicant","nnumapp","editAppli","userid","pathname","Dropdown","variant","Menu","Item","AppList","sortbyname","sortbydateofapply","renderNameIcon","renderDateOfApplyIcon","sortByName","sortByDateOfApply","accept","uusers","getapplicant","aapp","bapp","localeCompare","dateOfApply","tempAppli","nnumpos","Applications","innd","join","dateOfApplication","shortlist","reject","Employees","sortbytitle","sortbydateofjoin","renderTitleIcon","sortByTitle","sortByDateOfJoin","renderDateOfJoinIcon","applicantRating","jjobs","dateOfJoin","nrating","Myemployees","innnd","jwtToken","currentTime","now","exp","App","path","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25b4bb86.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING,\r\n    \r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"http://localhost:4001/user/register\", userData)\r\n        .then(res => alert(\"User registered successfully! You can log in now. \"),history.push(\"/register\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data ,\r\n            })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n    .post(\"http://localhost:4001/user/login\", userData)\r\n    .then(res => {\r\n        // Save to localStorage\r\n        // Set token to localStorage\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // Set token to Auth header\r\n        setAuthToken(token);\r\n        // Decode token to get user data\r\n        const decoded = jwt_decode(token);\r\n        // Set current user\r\n        dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n            dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data \r\n           \r\n        }) \r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\n\r\n// const isEmpty = require(\"is-empty\");\r\nimport isEmpty from \"is-empty\"\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n        return {\r\n            ...state,\r\n            isAuthenticated: !isEmpty(action.payload),\r\n            user: action.payload\r\n        };\r\n        case USER_LOADING:\r\n        return {\r\n            ...state,\r\n            loading: true\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n    case GET_ERRORS:\r\n        return action.payload;\r\n    default:\r\n        return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.devToolsExtension ? window.devToolsExtension() : f => f\r\n    )\r\n);\r\nexport default store;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n\r\nclass UsersList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {users: [],sortedUsers: [], sortName:true};\r\n        this.renderIcon = this.renderIcon.bind(this);\r\n        this.sortChange = this.sortChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4001/user')\r\n             .then(response => {\r\n                 this.setState({users: response.data, sortedUsers:response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    sortChange(){\r\n        var array = this.state.users;\r\n        var flag = this.state.sortName;\r\n        array.sort(function(a, b) {\r\n            if(a.date !== undefined && b.date !== undefined){\r\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            users:array,\r\n            sortName:!this.state.sortName,\r\n        })\r\n    }\r\n    renderIcon(){\r\n        if(this.state.sortName){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Paper>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell>\r\n                                            <TableCell>Name</TableCell>\r\n                                            <TableCell>Email</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.users.map((user,ind) => (\r\n                                        <TableRow key={ind}>\r\n                                            <TableCell>{user.date.substring(0,10)}</TableCell>\r\n                                            <TableCell>{user.name}</TableCell>\r\n                                            <TableCell>{user.email}</TableCell>\r\n                                        </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersList;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport { Jumbotron, Container, Button } from \"react-bootstrap\";\r\n\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"black\">\r\n        <Jumbotron fluid className=\"all\">\r\n          <Container>\r\n            <div className=\"register\">\r\n              <h1 className=\"welcome\">\r\n                <h1 className=\"welcome\">Welcome to Planet Of Jobs</h1>{\" \"}\r\n              </h1>\r\n              <p>\r\n                <h6>\r\n                  <b>\r\n                    <i className=\"find\">\r\n                      <h3 className=\"find\">find your dream job!</h3>\r\n                    </i>\r\n                  </b>\r\n                </h6>\r\n              </p>\r\n              <Link to=\"/login\">\r\n                <Button\r\n                  renderAs=\"button\"\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\",\r\n                  }}\r\n                >\r\n                  <span>Login</span>\r\n                </Button>\r\n              </Link>\r\n              <hr></hr>\r\n              <h6 className=\"grey-text text-darken-1\">\r\n                <p className=\"account\">Don't have an account? </p>{\" \"}\r\n                <Link to=\"/register\">Register</Link>\r\n              </h6>\r\n            </div>\r\n          </Container>\r\n        </Jumbotron>\r\n        <div className=\"first\">\r\n          <div className=\"first-one\">\r\n            <>\r\n              <h1 className=\"title1\">Reveal the strength who is in you</h1>\r\n              <h1 className=\"text1\">\r\n                your next job, you have to know all your strengths! 💪\r\n              </h1>\r\n              <p className=\"title2\">\r\n                Planet Of Jobz is the only platform that transforms all your\r\n                experiences, professional, personal, volunteer, school... into\r\n                clear and visible skills for recruiters.\r\n              </p>\r\n            </>\r\n          </div>\r\n          </div>\r\n          <div className=\"second \">\r\n        <div className=\"second-one\">\r\n       <h2 className=\"text3\">I was a cashier for several years besides my courses and I didn't mention it on my CV.\r\n        By discovering my soft skills: time management,\r\n        oral conception, maintenance... I understood that my experience was rich. \r\n        Now I put my soft skills into my applications and I'm proud to talk about it.\r\n        <br /><br />\r\n        <h4 className=\"natasha\"> 'natasha romanov: student engeneer'</h4>\r\n</h2>\r\n<img src=\"https://cdn-images.welcometothejungle.com/tsNgBU0oTc-Vj-RfK74Qfi60iBa5frhRlNRtzaljcNY/rs:auto:1500::/q:85/czM6Ly93dHRqLXByb2R1Y3Rpb24vdXBsb2Fkcy92aWRlby9pbWFnZS80Mjg3LzE2MDM0NC9tdXJmeV92aWRlb18zOXllQWVtLmpwZw\" className=\"img1\" />\r\n\r\n        </div>\r\n </div>\r\n\r\n          \r\n<div className=\"forth\">\r\n<div className=\"forth-one\">\r\n</div>\r\n</div>\r\n<div className=\"footer\">\r\n<div className=\"media\">\r\n  <h3 className=\"contact\">Follow us</h3>\r\n<img  src=\"https://thumbs.dreamstime.com/b/illustrations-de-vecteur-d-ic%C3%B4ne-logo-facebook-sur-le-fond-blanc-dans-les-ai-pour-la-banni%C3%A8re-web-142150097.jpg\"  className=\"facebook\"/>\r\n <img  src=\"https://img.freepik.com/vecteurs-libre/instagram-icone-nouveau_1057-2227.jpg?w=2000 \" className=\"insta\" />\r\n <img  src=\"https://help.twitter.com/content/dam/help-twitter/brand/logo.png \" className=\"twiti\" />\r\n <img  src=\"https://thumbs.dreamstime.com/b/logo-de-youtube-illustration-vecteur-couleur-rouge-et-noire-d-appli-isolement-sur-le-fond-blanc-155631998.jpg\" className=\"youtube\"  />\r\n\r\n</div>\r\n <div className=\"all-element\">\r\n <div className=\"element-footer1 \">\r\n <h5 className=\"elemenet-footer1\">Email : num54794109@gmail.com</h5>\r\n <h5 className=\"elemenet-footer1\">Phone number : 54794109</h5>\r\n <h5 className=\"elemenet-footer1\">about us</h5>\r\n \r\n </div>\r\n <div className=\"element-footer2\">\r\n <h5 className=\"elemenet-footer2\">career</h5>\r\n <h5 className=\"elemenet-footer2\">palces of jobs</h5>\r\n <h5 className=\"elemenet-footer2\">formation Name</h5>\r\n\r\n </div>\r\n <div className=\"element-footer3\">\r\n   \r\n <h5 className=\"elemenet-footer3\">departement</h5>\r\n <h5 className=\"elemenet-footer3\">jabs lists</h5>\r\n <h5 className=\"elemenet-footer3\">jobes types</h5>\r\n\r\n </div>\r\n </div>\r\n </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"./Register.css\"\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            role: \"\",\r\n            phone_number: NaN,\r\n            skills: [],\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({role: event.target.value});\r\n    }\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.skills);\r\n        if(this.state.role === \"applicant\" && this.state.skills !== \"\" && this.state.skills.length !== 0)\r\n            this.state.skills = this.state.skills.split;\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n            role: this.state.role,\r\n            phone_number: this.state.phone_number,\r\n            skills: this.state.skills\r\n        };\r\n        this.props.registerUser(newUser, this.props.history);\r\n        console.log(newUser);\r\n    };\r\n    render() {\r\n        const { errors } = this.state;\r\n        const userRole = this.state.role;\r\n        let RoleForm;\r\n        if(userRole === 'applicant') {\r\n            RoleForm = \r\n            <div>\r\n                <label htmlFor=\"skills\"><p className=\"skills\">Skills (comma-separated):</p></label><br></br>\r\n                <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.skills}\r\n                    placeholder=\"Enter skills\"\r\n                    id=\"skills\"\r\n                    type=\"text\"\r\n                />\r\n            </div>\r\n        }\r\n        else if(userRole === 'recruiter') {\r\n            RoleForm = \r\n            <div>\r\n                <label htmlFor=\"phone_number\"><p className=\"phone\">Phone Number</p></label><br></br>\r\n                <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.phone_number}\r\n                    id=\"phone_number\"\r\n                    type=\"number\"\r\n                />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"all-register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                        <i className=\"material-icons left\" style={{color:\"aqua\"}}><b>keyboard_backspace</b></i>\r\n                    </Link>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                        <h4>\r\n                        <b className=\"register\">Register</b>\r\n                        </h4>\r\n                        <p className=\"grey-text text-darken-1\">\r\n                       <p className=\"account\">Already have an account?</p>  <Link to=\"/login\"><p className=\"log-in\">Log in</p></Link>\r\n                        </p>\r\n                    </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"name\"><p className=\"Role\">Role</p></label><br />\r\n                                <select \r\n                                    value={this.state.role} \r\n                                    onChange={this.handleChange}\r\n                                    error={errors.role}\r\n                                    id=\"role\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.role\r\n                                        })}\r\n                                >\r\n                                    <option value=\"\" className=\"select\">Select role</option>\r\n                                    <option value=\"applicant\"  className=\"applicant\">Applicant</option>\r\n                                    <option value=\"recruiter\" className=\"recruiter\">Recruiter</option>\r\n                                </select>\r\n                                <span className=\"red-text\">{errors.role}</span>\r\n                            </div> \r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"name\"><p className=\"Name\">Name</p></label><br></br>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    error={errors.name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.name\r\n                                        })}\r\n                                />\r\n                                <span className=\"red-text\">{errors.name}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"email\"><p className=\"Email\">Email</p></label><br></br>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <span className=\"red-text\">{errors.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"password\"><p className=\"password\">Password</p></label><br></br>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <span className=\"red-text\">{errors.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"password2\"><p className=\"confirm\">Confirm Password</p></label><br></br>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password2\r\n                                    })}\r\n                                />\r\n                                <span className=\"red-text\">{errors.password2}</span>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"input-field col s12\">\r\n                                {RoleForm}\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport \"./Login.css\"\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n    if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData);\r\n        console.log(userData);\r\n    };\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n           <div className=\"all-login\" >\r\n           <div className=\"container\">\r\n                <div  className=\"row\">\r\n                    <div className=\"\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\" style={{color:\"aqua\"}}><b>keyboard_backspace</b></i>\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                            <h2 className=\"login\">Login</h2>\r\n                            </h4>\r\n                            <p className=\"dont\">\r\n                            Don't have an account? <Link to=\"/register\"><p style={{color:\"aqua\" , }}>Register</p></Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"email\"><p style={{color:\"white\"}}>Email</p></label><br></br>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                   \r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email || errors.emailnotfound\r\n                                    })}\r\n                               \r\n                                />\r\n                                <span className=\"red-text\">\r\n                                    {errors.email}\r\n                                    {errors.emailnotfound}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"password\"><p style={{color:\"white\"}} >Password</p></label><br></br>\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password || errors.passwordincorrect\r\n                                    })}\r\n                                />\r\n                                <span className=\"red-text\">\r\n                                    {errors.password}\r\n                                    {errors.passwordincorrect}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);\r\n  ","import React, {Component} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport './Navbar.css'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default class NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar  className=\"Nav \" >\r\n                <Navbar.Brand href=\"/\" className=\"title\"><b> <h2 style={{color:\"white\"}}>Planet Of Jobs</h2> </b></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav  className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\" className='home'><h6 style={{color:\"white\"}}>Home</h6></Nav.Link>\r\n                        <Nav.Link href=\"/profile\" className=\"profile\"> <h6 style={{color:\"white\"}}>Profile</h6></Nav.Link>\r\n                        <Nav.Link href=\"/dashboard\" className=\"dash\"><h6 style={{color:\"white\"}}>Dashboared</h6></Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n             \r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport \"./profile.css\"\r\nclass Profile extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            userdetails: [], \r\n            showform: false,\r\n            editing: \"\",\r\n            school: \"\",\r\n            degree: \"\",\r\n            startdate: new Date(),\r\n            file: null,\r\n             enddate: new Date(),\r\n        };\r\n        this.delEducation = this.delEducation.bind(this);\r\n        this.editEducation = this.editEducation.bind(this);\r\n        this.editEducationSubmit = this.editEducationSubmit.bind(this);\r\n        this.onBack = this.onBack.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n             .then(response => {\r\n                 this.setState({userdetails: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    delEducation(ed) {\r\n        const { user } = this.props.auth;\r\n        const idToRemove = ed._id;\r\n        this.state.userdetails.education = this.state.userdetails.education.filter((item) => item._id !== idToRemove);\r\n        axios\r\n            .put('http://localhost:4001/user/edit_profile/' + user.id, this.state.userdetails)\r\n            .then(response => {\r\n                console.log(this.state.userdetails);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        // to refresh\r\n        window.location.reload();\r\n    }\r\n\r\n    editEducation(ed) {\r\n        let show = !this.state.showform;\r\n        this.setState({showform: show});\r\n        let editid = ed._id;\r\n        this.setState({editing: editid});\r\n        console.log(this.state.showform);\r\n        this.setState({ school: ed.school });\r\n        this.setState({ degree: ed.degree });\r\n        if(ed.startdate)\r\n        {\r\n            ed.startdate = ed.startdate.toString();\r\n            ed.startdate = ed.startdate.substring(0,10);\r\n            this.setState({ startdate: ed.startdate });\r\n        }\r\n        if(ed.enddate)\r\n        {\r\n            ed.enddate = ed.enddate.toString();\r\n            ed.enddate = ed.enddate.substring(0,10);\r\n            this.setState({ enddate: ed.enddate });\r\n        }\r\n        \r\n        // to refresh\r\n         this.props.history.push('/profile');\r\n    }\r\n\r\n    onBack() {\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        this.setState({ editing: \"\" });\r\n        \r\n        // to refresh\r\n        window.location.reload();\r\n    }\r\n\r\n    editEducationSubmit(ed) {\r\n        const { user } = this.props.auth;\r\n        const idToChange = ed._id;\r\n        this.setState({ editing: \"\" });\r\n        const ind = this.state.userdetails.education.findIndex(x => x._id === idToChange)\r\n        if(this.state.school !== \"\")\r\n            this.state.userdetails.education[ind].school = this.state.school;\r\n        if(this.state.degree !== \"\")\r\n            this.state.userdetails.education[ind].degree = this.state.degree;\r\n        this.state.userdetails.education[ind].startdate = this.state.startdate;\r\n        if(this.state.enddate && new Date(this.state.enddate) <= new Date(this.state.startdate))\r\n        {\r\n            alert(\"End date ahould be after start date.\");\r\n        }\r\n        else {\r\n            this.state.userdetails.education[ind].enddate = this.state.enddate;\r\n            axios\r\n                .put('http://localhost:4001/user/edit_profile/' + user.id, this.state.userdetails)\r\n                .then(response => {\r\n                    console.log(this.state.userdetails);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n            // to refresh\r\n        }\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n         window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.userdetails;\r\n        const userRole = user.role;\r\n        let UserDetails;\r\n        if(userRole === 'applicant') {\r\n            UserDetails = \r\n            <div  >\r\n                 <ul className=\"profileApp\" >\r\n                    {/* <li>DP: {user.profile_image}</li> */}\r\n                    <li className=\"liApp\">Email: {user.email}</li>\r\n                    <li className=\"liskils\">Skills:    {user.skills.map(skill=>(<li>  {skill}</li>))}</li>  \r\n                    \r\n                                \r\n                            \r\n                       \r\n                           \r\n                    \r\n                    {/* <li>Resume: {user.resume}</li> */}\r\n                </ul>\r\n                <hr></hr>\r\n                <ul className=\"ulEduc\">\r\n                    <li ><p className=\"pEducation\" >Education:</p>\r\n                        <Tooltip title=\"Add Education\" aria-label=\"added\">\r\n                            <Link style={{ color: '#009900', weight: 'bold' , display:\"flex\"}} to=\"/addeducation\"><i className=\"material-icons\" ><h3 style={{marginLeft:\"0px\"}}> add</h3></i></Link>\r\n                        </Tooltip>\r\n                        <ul >\r\n                            {user.education.map(ed => (\r\n                                <li className=\"liEduca\" >\r\n                                    <ul className=\"ulEduca\" >\r\n                                        <li className=\"liEducat\" >School: {ed.school}</li>\r\n                                        <li className=\"liEducat\" >Degree: {ed.degree}</li>\r\n                                        <li className=\"liEducat\">Start date: {ed.startdate ? ed.startdate.toString().substring(0, 10): \"NA\"}</li>\r\n                                        <li className=\"liEducat\">End date: {ed.enddate ? ed.enddate.toString().substring(0, 10):\"NA\"}</li>\r\n                                    </ul>\r\n                                    \r\n                                    <div >\r\n                                        { !this.state.showform || ed._id !== this.state.editing? \r\n                                            <div >\r\n                                                <Tooltip title=\"Delete Above Education\" aria-label=\"delete\">\r\n                                                <button\r\n                                                style={{\r\n                                                    color: \"#FF0000\",\r\n                                                    marginLeft:\"300px\"\r\n                                                    }}\r\n                                                    className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                    onClick={() => this.delEducation(ed)}>\r\n                                                    <i className=\"material-icons\" >delete</i>\r\n                                                </button>\r\n                                                </Tooltip>\r\n                                                <Tooltip title=\"Edit Above Education\" aria-label=\"edit\">\r\n                                                <button\r\n                                                    style={{\r\n                                                    color: \"#0000FF\",\r\n                                                    }}\r\n                                                    className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                    onClick={() => this.editEducation(ed)}>\r\n                                                    <i className=\"material-icons\">edit</i>\r\n                                                </button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        : \r\n                                            <div  >\r\n                                                <br></br>\r\n                                                <form noValidate onSubmit={this.onSubmit}>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"school\">School</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.school}\r\n                                                            id=\"school\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"degree\">Degree</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.degree}\r\n                                                            id=\"degree\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"startdate\">Start Date</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.startdate}\r\n                                                            id=\"startdate\"\r\n                                                            type=\"date\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"enddate\">End Date</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.enddate}\r\n                                                            id=\"enddate\"\r\n                                                            type=\"date\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                                    <button\r\n                                                    style={{\r\n                                                        color: \"coral\",\r\n                                                        }}\r\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.onBack()}>\r\n                                                        <b>Back</b>\r\n                                                    </button>\r\n                                                    <button\r\n                                                    style={{\r\n                                                        color: \"#009900\",\r\n                                                        }}\r\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.editEducationSubmit(ed)}>\r\n                                                        <b>Save</b>\r\n                                                    </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div> \r\n                                            \r\n                                         }\r\n                                    </div>\r\n                                    <br></br>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        }\r\n        else if(userRole === 'recruiter') {\r\n            UserDetails = \r\n            <ul className=\"ul\">\r\n                <li className=\"li\">Bio: {user.bio}</li>\r\n                <li className=\"li\">Email: {user.email}</li>\r\n                <li className=\"li\">Contact Num: {user.phone_number}</li>\r\n            </ul>\r\n        }\r\n        return (\r\n            \r\n            <div  className=\"allp \">\r\n                <div className=\"containerCard\">\r\n                    <div className=\"allCard\">\r\n                    <Card className=\"card\" >\r\n                        <Card.Header className=\"cardHeader\">\r\n                            <Button className=\"buttonProfile\"><h4>My Profile</h4></Button>\r\n                        </Card.Header>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Card.Title>\r\n                                <p className=\"userInfo\">\r\n                                    <h3 className=\"userName\"><h3 >hellow {user.name}</h3> </h3>\r\n                                    <Tooltip title=\"Edit Profile\" aria-label=\"edit\" className=\"edit\">\r\n                                        <Link to=\"/editprofile\"><i className=\"material-icons\" > edit</i></Link>\r\n                                    </Tooltip>\r\n                                </p>\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                {UserDetails}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Profile);","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Edit.css\"\r\nclass EditProfile extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [], \r\n            jobs: [],\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            bio: \"\",\r\n            role: \"\",\r\n            resume: \"\",\r\n            phone_number: NaN,\r\n            skills: [],\r\n            skillsstring: \"\",\r\n            nameError: \"\",\r\n            emailError: \"\",\r\n            bioError: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n             .then(response => {\r\n                this.setState(\r\n                {\r\n                    name: response.data.name,\r\n                    email: response.data.email,\r\n                    password: response.data.password,\r\n                    role: response.data.role,\r\n                    phone_number: response.data.phone_number,\r\n                    bio: response.data.bio,\r\n                    resume: response.data.resume,\r\n                    skills: response.data.skills\r\n                });\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n        axios.get('http://localhost:4001/job/get_jobs')\r\n            .then(response => {\r\n                this.setState({jobs: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    validate = () => {\r\n        const user = this.state;\r\n        let nameError = \"\";\r\n        let emailError = \"\";\r\n        let bioError = \"\";\r\n    \r\n        if (!this.state.name) {\r\n          nameError = \"Name cannot be blank\";\r\n        }\r\n    \r\n        if (!this.state.email.includes(\"@\")) {\r\n          emailError = \"Invalid email\";\r\n        }\r\n    \r\n        if (emailError || nameError) {\r\n          this.setState({ emailError, nameError });\r\n          return false;\r\n        }\r\n       \r\n        if(user.role === \"recruiter\")\r\n        {\r\n            let num = this.state.bio.split.length;\r\n            if(num > 250)\r\n            {\r\n                bioError = \"Bio cannot have more than 250 words.\";\r\n                this.setState({ bioError });\r\n                return false;\r\n            }\r\n        }\r\n    \r\n        return true;\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const { user } = this.props.auth;\r\n        const euser = this.state;\r\n        euser.skills = this.state.skillsstring.split(',');\r\n        const editedUser = {\r\n            name: euser.name,\r\n            email: euser.email,\r\n            password: euser.password,\r\n            password2: euser.password2,\r\n            role: euser.role,\r\n            phone_number: euser.phone_number,\r\n            bio: euser.bio,\r\n            resume: euser.resume,\r\n            skills: euser.skills\r\n        };\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            axios\r\n                .put('http://localhost:4001/user/edit_profile/' + user.id, editedUser)\r\n                .then(response => {\r\n                    console.log(editedUser);this.props.history.push('/profile');\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n            this.state.jobs.filter(item => item.recruiter === user.id).forEach((jobb) => \r\n            {\r\n                const editJob = {\r\n                    recruiterName: euser.name,\r\n                    recruiterEmail: euser.email\r\n                }\r\n                axios\r\n                    .put('http://localhost:4001/job/edit_job/' + jobb._id, editJob)\r\n                    .then(response => {\r\n                        console.log(editJob);\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log(error);\r\n                    })\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const user = this.state;\r\n        const userRole = user.role;\r\n        user.skillsstring = user.skills.toString()\r\n        let EditUserDetails;\r\n        if(userRole === 'applicant') {\r\n            EditUserDetails = \r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"name\">Name</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.name}\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.nameError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"email\">Email</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.emailError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"skills\">Skills</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.skillsstring}\r\n                        id=\"skills\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button\r\n                        style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }\r\n        else if(userRole === 'recruiter') {\r\n            EditUserDetails = \r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"name\"><h5 className=\"name\">Name</h5></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.name}\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.nameError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"bio\"><h5 className=\"bio\">Bio</h5></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.bio}\r\n                        id=\"bio\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.bioError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"phone_number\"><h5 className=\"contactnum\">Contact num</h5></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.phone_number}\r\n                        id=\"phone_number\"\r\n                        type=\"number\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"email\"><h5 className=\"email\">Email</h5></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.emailError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button\r\n                        style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }\r\n        return (\r\n            <div className=\"allEdit\">\r\n                <div >\r\n                    <div className=\"cardEdit\">\r\n                        <Card className=\"card\">\r\n                            <Card.Header className=\"cardHeader\">\r\n                                <Button className=\"buttonEdit\"><h4>My Information</h4></Button>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"cardBody\">\r\n                                <Card.Text>\r\n                                    {EditUserDetails}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(EditProfile);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n    {...rest}\r\n    render={props =>\r\n        auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n        ) : (\r\n        <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport \"./Dash.css\";\r\nimport {Link} from \"react-router-dom\"\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            userdetails: [], \r\n        };\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n             .then(response => {\r\n                 this.setState({userdetails: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props.auth;\r\n        let UserOptions;\r\n        if(this.state.userdetails.role === \"applicant\")\r\n        {\r\n            UserOptions = \r\n            <ul>\r\n                <li><a href=\"/profile\">My Profile</a></li>\r\n                <li><a href=\"/jobsList\">View Jobs</a></li>\r\n                <li><a href=\"/myApplications\">My Applications</a></li>\r\n                <button \r\n                            style={{\r\n                            width: \"150px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                            }}\r\n                            onClick={this.onLogoutClick}\r\n                            className=\"logout btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                        >\r\n                            Logout\r\n                        </button>\r\n            </ul>\r\n        }\r\n        else if(this.state.userdetails.role === \"recruiter\")\r\n        {\r\n            UserOptions = \r\n            <ul className=\"menu\">\r\n                <li ><Link  to=\"/profile\"><h5 className=\"list\">My Profile</h5></Link></li>\r\n                <li><a href=\"/addJob\"><h5 className=\"list\">Add Job</h5></a></li>\r\n                <li><a href=\"/viewMyActiveJobs\"><h5 className=\"list\">My Job Listings</h5></a></li>\r\n                <li><a href=\"/employees\"><h5 className=\"list\">Employees</h5></a></li>\r\n                <button \r\n                            style={{\r\n                            width: \"150px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                            }}\r\n                            onClick={this.onLogoutClick}\r\n                            className=\"logout btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                        >\r\n                            Logout\r\n                        </button>\r\n            </ul>\r\n        }\r\n        return (\r\n            <div className=\"allDash\" >\r\n                <div className=\"dashCard\">\r\n                    <div >\r\n                        \r\n                        <h6>\r\n                            \r\n                        </h6>\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Header className=\"dashHeader\">\r\n                                <h4 className=\"listHeader\">\r\n                                    <b >Hey {user.name.split(\" \")[0]} !</b>\r\n                                </h4>\r\n                            </Card.Header >\r\n                            <Card.Body className=\"dashBody\">\r\n                                <Card.Title>\r\n                                    <p className=\"logged\">\r\n                                    You are logged into {\" \"}\r\n                                    <span style={{ fontFamily: \"monospace\" }}><b>JobsPlanet</b></span>\r\n                                    </p>\r\n                                \r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    {UserOptions}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        \r\n                       \r\n                     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./add.css\"\r\nclass AddEducation extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newed:[],\r\n            role: \"\",\r\n            school: \"\",\r\n            degree: \"\",\r\n            startdate: new Date(),\r\n            // enddate: new Date(),\r\n            userDetails: [],\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n            .then(response => {\r\n                this.setState({userDetails: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const { user } = this.props.auth;\r\n        const newEducation = {\r\n            school: this.state.school,\r\n            degree: this.state.degree,\r\n            startdate: this.state.startdate,\r\n            enddate: this.state.enddate\r\n        };\r\n        var g1,g2;\r\n        if(newEducation.startdate && newEducation.enddate)\r\n        {\r\n            g1 = new Date(newEducation.startdate); \r\n            g2 = new Date(newEducation.enddate); \r\n        }\r\n        if(!newEducation.startdate || newEducation.school === \"\" || newEducation.degree === \"\")\r\n        {\r\n            alert(\"School, Degree and Start Date are required!\");\r\n        }\r\n        else if(newEducation.enddate && g2<g1)\r\n        {\r\n            alert(\"End date cannot be before start date.\");\r\n        }\r\n        else{\r\n            this.state.userDetails.education.push(newEducation);\r\n            axios\r\n                .put('http://localhost:4001/user/edit_profile/' + user.id, this.state.userDetails)\r\n                .then(response => {\r\n                    console.log(this.state.userDetails);this.props.history.push('/profile');\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const userRole = this.state.userDetails.role;\r\n        let AddEducation;\r\n        if(userRole === 'applicant') {\r\n            AddEducation = \r\n            <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"school\">School</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.school}\r\n                        id=\"school\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"degree\">Degree</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.degree}\r\n                        id=\"degree\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"startdate\">Start Date</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.startdate}\r\n                        id=\"startdate\"\r\n                        type=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"enddate\">End Date</label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.enddate}\r\n                        id=\"enddate\"\r\n                        type=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button\r\n                        style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }\r\n        return (\r\n            <div >\r\n                <div >\r\n                    <div >\r\n                        <Card className=\"addEducation\">\r\n                            <Card.Body>\r\n                                <Card.Text className=\"cardAdd\">\r\n                                    {AddEducation}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(AddEducation);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport  \"./JobList.css\"\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { connect } from \"react-redux\";\r\nimport Fuse from 'fuse.js';\r\n\r\nclass JobsList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            jobs: [],\r\n            extraJobs: [], \r\n            applications: [],\r\n            sortName:true, \r\n            recruiterName: \"\",\r\n            showform: false,\r\n            editing: \"\",\r\n            enteredsop: \"\",\r\n            sopError: \"\",\r\n            sortbysalary:true,\r\n            sortbyduration:true,\r\n            sortbyrating:true,\r\n            searchval: \"\",\r\n            jobTypeFilterVal: \"\",\r\n            salaryFilterMinVal: \"\",\r\n            salaryFilterMaxVal: \"\",\r\n            durationFilterVal: \"\"\r\n        };\r\n        this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\r\n        this.renderDurationIcon = this.renderDurationIcon.bind(this);\r\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\r\n        this.sortBySalary = this.sortBySalary.bind(this);\r\n        this.sortByDuration = this.sortByDuration.bind(this);\r\n        this.sortByRating = this.sortByRating.bind(this);\r\n        this.onSearch = this.onSearch.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.apply = this.apply.bind(this);\r\n        this.onSOPsubmit = this.onSOPsubmit.bind(this);\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onFilter = e => {\r\n        let jobTypeVal = this.state.jobTypeFilterVal;\r\n        let salaryMinVal = this.state.salaryFilterMinVal;\r\n        let salaryMaxVal = this.state.salaryFilterMaxVal;\r\n        let durationVal = \"\";\r\n        if(this.state.durationFilterVal !== \"\")\r\n        {\r\n            durationVal = parseInt(this.state.durationFilterVal);\r\n        }\r\n        let filteredJobs = this.state.extraJobs;\r\n        if(jobTypeVal !== \"\" && jobTypeVal !== undefined)\r\n        {\r\n            filteredJobs = filteredJobs.filter(item => item.type === jobTypeVal);\r\n        }\r\n        if(salaryMinVal !== \"\" && salaryMinVal !== undefined)\r\n        {\r\n            filteredJobs = filteredJobs.filter(item => item.salary >= salaryMinVal);\r\n        }\r\n        if(salaryMaxVal !== \"\" && salaryMaxVal !== undefined)\r\n        {\r\n            filteredJobs = filteredJobs.filter(item => item.salary < salaryMaxVal);\r\n        }\r\n        if(durationVal !== \"\" && durationVal !== undefined)\r\n        {\r\n            filteredJobs = filteredJobs.filter(item => item.duration < durationVal);\r\n        }\r\n        this.setState({ jobs: filteredJobs });\r\n    };\r\n\r\n    onSearch = e => {\r\n        this.setState({ searchval : e.target.value });\r\n        let sval = this.state.searchval;\r\n        if(sval === \"\" || sval === undefined)\r\n        {\r\n            this.setState({ jobs : this.state.extraJobs });\r\n        }\r\n        else\r\n        {\r\n            const options = {\r\n                keys: [\"title\"]\r\n            };\r\n            const fuse = new Fuse(this.state.jobs, options);\r\n            let result = fuse.search(sval);\r\n            \r\n            // this.setState({ jobs : this.state.extraJobs.filter(item => item.title.includes(sval)) });\r\n            let n = result.length;\r\n            let i = 0;\r\n            let res = [];\r\n            for( i = 0; i < n; i++) {\r\n                res.push(result[i].item);\r\n            }\r\n            // console.log(res);\r\n            this.setState({ jobs : res });\r\n            // console.log(this.state.jobs);\r\n            \r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        this.setState({ showform : false });\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n                .then(response => {\r\n                    this.setState({userdetails: response.data});\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n        axios.get('http://localhost:4001/job/get_jobs')\r\n            .then(response => {\r\n                this.setState({jobs: response.data, extraJobs:response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/application/get_applications')\r\n            .then(response => {\r\n                this.setState({applications: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    sortBySalary(){\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortbysalary;\r\n        array.sort(function(a, b) {\r\n            if(a.salary !== undefined && b.salary !== undefined){\r\n                return (1 - +flag*2) * (+a.salary - +b.salary);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortbysalary:!this.state.sortbysalary,\r\n        })\r\n    }\r\n\r\n    sortByDuration(){\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortbyduration;\r\n        array.sort(function(a, b) {\r\n            if(a.duration !== undefined && b.duration !== undefined){\r\n                return (1 - +flag*2) * (+a.duration - +b.duration);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortbyduration:!this.state.sortbyduration,\r\n        })\r\n    }\r\n\r\n    sortByRating(){\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortbyrating;\r\n        array.sort(function(a, b) {\r\n            if(a.rating !== undefined && b.rating !== undefined){\r\n                return (1 - +flag*2) * (+a.rating - +b.rating);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortbyrating:!this.state.sortbyrating,\r\n        })\r\n    }\r\n\r\n    renderSalaryIcon(){\r\n        if(this.state.sortbysalary){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderDurationIcon(){\r\n        if(this.state.sortbyduration){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderRatingIcon(){\r\n        if(this.state.sortbyrating){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    applied(job) {\r\n        const { user } = this.props.auth;\r\n        let num = 0;\r\n        let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status === \"Applied\" || item.status === \"Shortlisted\" || item.status === \"Accepted\"));\r\n        num = arr.length;\r\n        if(num>0) return true;\r\n        else return false;\r\n    }\r\n\r\n    apply(job)\r\n    {\r\n        if(this.state.userdetails.numapp >= 10)\r\n        {\r\n            alert(\"Maximum open applications of 10 reached. Take a break!\");\r\n        }\r\n        else if(this.state.userdetails.working === true)\r\n        {\r\n            alert(\"You are already accepted into one of the jobs you applied for. Check My Applications page.\");\r\n        }\r\n        else\r\n        {\r\n            let show = !this.state.showform;\r\n            this.setState({ showform : show });\r\n            let editid = job._id;\r\n            this.setState({ editing : editid });\r\n            console.log(this.state.showform);\r\n            this.props.history.push('/jobsList');\r\n            this.props.history.push('/jobsList');\r\n            this.props.history.goBack();\r\n        }\r\n    }\r\n\r\n    onSOPsubmit(job)\r\n    {\r\n        const { user } = this.props.auth;\r\n        const newApplication = {\r\n            jobId: job._id,\r\n            applicantId: user.id,\r\n            recruiterId:job.recruiter,\r\n            stage: 0,\r\n            status: \"Applied\",\r\n            sop: this.state.enteredsop,\r\n            salary: job.salary,\r\n            recruiterName: job.recruiterName,\r\n            rating: -1,\r\n            title: job.title\r\n        };\r\n\r\n        let nnumapp = +job.numapp + 1;\r\n\r\n        const editJob = {\r\n            numapp: nnumapp \r\n        }\r\n\r\n        let appnumapp = +this.state.userdetails.numapp + 1;\r\n\r\n        const editApplicant = {\r\n            numapp:  appnumapp\r\n        }\r\n\r\n        let num = this.state.enteredsop.split(' ').length;\r\n\r\n        let soperror = \"\";\r\n        if(num>250)\r\n        {\r\n            soperror = \"Maximum 250 words allowed.\";\r\n            this.setState({sopError: soperror});\r\n        }\r\n\r\n        if(num <= 250 && this.state.userdetails.numapp <= 10)\r\n        {\r\n            axios\r\n                .post('http://localhost:4001/application/add_application', newApplication)\r\n                .then(response => {\r\n                    console.log(newApplication);\r\n                    alert(\"Application sent successfully!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                    alert(\"Application could not be sent.\");\r\n                })\r\n            axios\r\n                .put('http://localhost:4001/job/edit_job/' + job._id, editJob)\r\n                .then(response => {\r\n                    console.log(editJob);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n            axios\r\n                .put('http://localhost:4001/user/edit_profile/' + user.id, editApplicant)\r\n                .then(response => {\r\n                    console.log(editApplicant);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n                this.setState({ editting : \"\" });\r\n            this.props.history.push('/jobsList');\r\n            this.props.history.push('/');\r\n            this.props.history.goBack();\r\n        }\r\n        else {\r\n            alert(\"SOP cannot have more than 250 words.\");\r\n        }\r\n    }\r\n    \r\n\r\n    render() \r\n    {\r\n        const userRole = this.state.userdetails.role;\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        let AllJobs;\r\n        if(userRole === \"applicant\") {\r\n            AllJobs =\r\n            <div className=\"allDivAdd\">\r\n                <Grid container>\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                        <ListItem text>\r\n                            <h3 className=\"activeJob\">Active Jobs</h3>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n                    <Grid className=\"search\" >\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                        <TextField \r\n                        id=\"searchval\" \r\n                        onChange={this.onChange}\r\n                        value={this.state.searchval}\r\n                        placeholder=\"Fuzzy Search\"\r\n                        fullWidth={true}   \r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment>\r\n                                    \r\n                                    <IconButton onClick={this.onSearch}>\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                   \r\n                                </InputAdornment>\r\n                            )}}\r\n                        />\r\n                    </List>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid className='filter' >\r\n                        Filters:\r\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                            <select \r\n                                value={this.state.jobTypeFilterVal} \r\n                                onChange={this.onChange}\r\n                                id=\"jobTypeFilterVal\"\r\n                            >\r\n                                <option value=\"\">Select Job Type</option>\r\n                                <option value = \"fullTime\">Full-Time</option>\r\n                                <option value=\"partTime\">Part-Time</option>\r\n                                <option value=\"wfh\">Work from home</option>\r\n                            </select>\r\n                            {/* <TextField \r\n                                id=\"jobTypeFilterVal\" \r\n                                onChange={this.onChange}\r\n                                value={this.state.jobTypeFilterVal}\r\n                                placeholder=\"Job Type\"\r\n                                fullWidth={true}   \r\n                            /> */}\r\n                        </List>\r\n                    </Grid>\r\n                    <Grid container  className=\"salary\">\r\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                            <TextField \r\n                                id=\"salaryFilterMinVal\" \r\n                                onChange={this.onChange}\r\n                                value={this.state.salaryFilterMinVal}\r\n                                placeholder=\"Min Salary\"\r\n                                fullWidth={true}   \r\n                            /> <br></br>\r\n                            <TextField \r\n                                id=\"salaryFilterMaxVal\" \r\n                                onChange={this.onChange}\r\n                                value={this.state.salaryFilterMaxVal}\r\n                                placeholder=\"Max Salary\"\r\n                                fullWidth={true}   \r\n                            />\r\n                        </List>\r\n                    </Grid>\r\n                    <Grid className=\"duration\" >\r\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                       \r\n                            <select \r\n                                value={this.state.durationFilterVal} \r\n                                onChange={this.onChange}\r\n                                id=\"durationFilterVal\"\r\n                            >\r\n                                <option value=\"\">Select duration</option>\r\n                                <option value = \"0\" >Indefinite</option>\r\n                                <option value=\"1\">1 month</option>\r\n                                <option value=\"2\">2 months</option>\r\n                                <option value=\"3\">3 months</option>\r\n                                <option value=\"4\">4 months</option>\r\n                                <option value=\"5\">5 months</option>\r\n                                <option value=\"6\">6 months</option>\r\n                            </select>\r\n                \r\n                            <hr></hr>\r\n                            <button onClick={this.onFilter} className=\"filterbutton\">\r\n                                Filter\r\n                            </button>\r\n                            <hr></hr>\r\n                        </List>\r\n                    </Grid>\r\n\r\n                    <Grid >\r\n                        <Paper>\r\n                            <Table className='gridTableAdd'>\r\n                                <TableHead className=\"tableHeadAdd\">\r\n                                    <TableRow container >\r\n                                            <TableCell><p className='elementTable'>Title</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>Recruiter</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>Type</p></TableCell>\r\n                                            <TableCell > <p className=\"tableSalary\">Salary (per month)<Button className=\"buttonSalary\" onClick={this.sortBySalary}>{this.renderSalaryIcon()}</Button></p></TableCell>\r\n                                            <TableCell><p className=\"tableSalary\"> Duration(months): 0 for Indefinite<Button onClick={this.sortByDuration}>{this.renderDurationIcon()}</Button></p></TableCell>\r\n                                            <TableCell><p className='elementTablesdate'>Date of posting</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>Deadline</p></TableCell>\r\n                                            <TableCell><p className=\"tableRating\">Rating<Button className=\"buttonRating\" onClick={this.sortByRating}>{this.renderRatingIcon()}</Button></p></TableCell>\r\n                                            \r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.jobs.filter(item => (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\r\n                                        <TableRow key={ind}>\r\n                                            <TableCell><p className='elementTable'>{job.title}</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>{job.recruiterName}</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>{job.type === \"partTime\"? \"Part-Time\": \"\"}\r\n                                            {job.type === \"fullTime\"? \"Full-Time\": \"\"}\r\n                                            {job.type === \"wfh\"? \"Work from Home\": \"\"}</p></TableCell>\r\n                                            <TableCell><p className='tableSalary'>{job.salary}</p></TableCell>\r\n                                            <TableCell><p className='tableSalary'>{job.duration}</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>Day-{new Date(job.dateOfPost).getDate()}, Month-{monthNames[new Date(job.dateOfPost).getMonth()]}, Year-{new Date(job.dateOfPost).getFullYear()}</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>{job.deadline.substring(0,10)}</p></TableCell>\r\n                                            <TableCell><p className='elementTables'>{job.rating? job.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></p></TableCell>\r\n                                    \r\n                                            {!this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Apply for this job\" aria-label=\"apply\">\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3 buttonAplly\" \r\n                                                        onClick={() => this.apply(job)}>\r\n                                                        Apply\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n\r\n                                            <div></div>\r\n\r\n                                            }\r\n                                            {this.applied(job)?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Applied for this job\" aria-label=\"applied\">\r\n                                                    <button\r\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\">\r\n                                                        Applied\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            : <div></div>\r\n\r\n                                            }\r\n                                            {(job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job)?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Tooltip title=\"No vacancy\" aria-label=\"full\">\r\n                                                    <button\r\n                                                        className=\"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\">\r\n                                                        Full\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n                                                <div></div>\r\n\r\n                                            }\r\n\r\n                                            {this.state.showform === true && job._id === this.state.editing?\r\n                                            <TableCell>\r\n                                                <div>\r\n                                                    <div className=\"input-field\">\r\n                                                        <label htmlFor=\"enteredsop\">Enter SOP:</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.enteredsop}\r\n                                                            id=\"enteredsop\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.onSOPsubmit(job)}>\r\n                                                        Submit\r\n                                                    </button>\r\n                                                </div>                                    \r\n                                            </TableCell>\r\n                                            : <TableCell></TableCell>\r\n                                            }\r\n\r\n                                            \r\n                                        </TableRow> \r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        }\r\n        return (\r\n            <div >\r\n                <div className=\"JobList\">\r\n                    <div >\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    {AllJobs}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nJobsList.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(JobsList);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport List from '@material-ui/core/List';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Myapp.css\"\r\n\r\nclass MyApplications extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            applications: [],\r\n            rating: 0\r\n        };\r\n        this.giveRating = this.giveRating.bind(this);\r\n        // this.renderIcon = this.renderIcon.bind(this);\r\n        // this.sortChange = this.sortChange.bind(this);\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    giveRating(e) {\r\n        this.setState({rating: e.target.value});\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n                .then(response => {\r\n                    this.setState({userdetails: response.data});\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n        axios.get('http://localhost:4001/job/get_jobs')\r\n            .then(response => {\r\n                this.setState({jobs: response.data, sortedJobs:response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/application/get_applications')\r\n            .then(response => {\r\n                this.setState({applications: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    rated(application) {\r\n        if(application.rating !== -1)return true;\r\n        return false;\r\n    }\r\n\r\n    getjob(jobId)\r\n    {\r\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\r\n        return job;\r\n    }\r\n\r\n    rate(application)\r\n    {\r\n        let job = this.getjob(application.jobId);\r\n        let nrate = job.numrate;\r\n        nrate = nrate + 1;\r\n        let nrating = 0;\r\n        if(job.rating === -1)\r\n        {\r\n            nrating = this.state.rating\r\n        }\r\n        else\r\n        {\r\n            nrating = ((+job.rating * (+nrate-1)) + +this.state.rating) / (+nrate);\r\n        }\r\n\r\n        const editJob = {\r\n            rating: nrating,\r\n            numrate: nrate\r\n        };\r\n\r\n        const editApplication = {\r\n            rating: this.state.rating\r\n        };\r\n\r\n        axios\r\n            .put('http://localhost:4001/job/edit_job/' + job._id, editJob)\r\n            .then(response => {\r\n                console.log(editJob);\r\n                alert(\"Job rated successfully!\");\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n                alert(\"Job could not be rated.\");\r\n            })\r\n\r\n        axios\r\n            .put('http://localhost:4001fhdrh/application/edit_application/' + application._id, editApplication)\r\n            .then(response => {\r\n                console.log(editApplication);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n\r\n        window.location.reload();\r\n    \r\n    }\r\n\r\n    render() \r\n    {\r\n        const { user } = this.props.auth;\r\n        const userRole = this.state.userdetails.role;\r\n        let AppliedJobs;\r\n        if(userRole === \"applicant\") {\r\n            AppliedJobs =\r\n            <div>\r\n                <Grid container>\r\n                <Grid item xs={12} md={3} lg={3}>\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                        <ListItem text>\r\n                            <h3>My Applications</h3>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Paper>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow className=\"tableMyapp\">\r\n                                            <TableCell ><p className='tableEle'>Title</p></TableCell>\r\n                                            <TableCell ><p className='tableEle'>Status</p></TableCell>\r\n                                            <TableCell><p  className='tableEle'>Date of Joining</p></TableCell>\r\n                                            <TableCell ><p className='tableEle'>Salary (per month)</p></TableCell>\r\n                                            <TableCell ><p className='tableEle'>Recruiter</p></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.applications.filter(item => item.applicantId === user.id).map((application,ind) => (\r\n                                        <TableRow key={ind}>\r\n                                            <TableCell  >{application.title}</TableCell>\r\n                                            <TableCell>{application.status}</TableCell>\r\n                                            <TableCell>{application.doj? application.doj.substring(0,10) : \"\"}</TableCell>\r\n                                            <TableCell>{application.salary}</TableCell>\r\n                                            <TableCell>{application.recruiterName}</TableCell>\r\n                                           \r\n                                            {!this.rated(application) && application.status === \"Accepted\"?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Rating\r\n                                                    value={this.state.rating}\r\n                                                    onChange={this.giveRating}\r\n                                                />\r\n                                                <Tooltip title=\"Rate this job\" aria-label=\"apply\">\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.rate(application)}>\r\n                                                        Rate\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n\r\n                                            <TableCell>\r\n                                                <div>{application.rating !== -1? \"Rated\" : \"\"}</div>                                           \r\n                                            </TableCell>\r\n\r\n                                            }\r\n                                            \r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        }\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\r\n                <div className=\"\">\r\n                    <div >\r\n                        <Card className=\"MyappCard\">\r\n                            <Card.Body>\r\n                                <Card.Text >\r\n                                    {AppliedJobs}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyApplications.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(MyApplications);","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport\"./createjob.css\"\r\nclass CreateJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            recruiter: [],\r\n            recruiterName: \"\",\r\n            title: \"\",\r\n            titleError: \"\",\r\n            description: \"\",\r\n            type: \"\",\r\n            typeError: \"\",\r\n            duration: -1,\r\n            durationError: \"\",\r\n            durationstr: \"\",\r\n            salary: -1,\r\n            salaryError: \"\",\r\n            posmax: 1,\r\n            appmax: 10,\r\n            appmaxError: \"\",\r\n            numpos: 0,\r\n            numapp: 0,\r\n            app: 0,\r\n            address: \"\",\r\n            addressError: \"\",\r\n            skills: [],\r\n            skillstr: \"\",\r\n            rating: 0,\r\n            numrate: 0,\r\n            dateOfPost: new Date(),\r\n            // default 100 days from now\r\n            deadline: new Date(new Date().getTime()+(100*24*60*60*1000)),\r\n            deadlineError: \"\",\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n             .then(response => {\r\n                 this.setState({userdetails: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    validate = () => {\r\n        let titleError = \"\";\r\n        let typeError = \"\";\r\n        let durationError = \"\";\r\n        let salaryError = \"\";\r\n        let addressError = \"\";\r\n        let deadlineError = \"\";\r\n        let appmaxError = \"\";\r\n\r\n    \r\n        if (this.state.title === \"\") {\r\n          titleError = \"Title cannot be blank\";\r\n        }\r\n\r\n        if (this.state.type === \"\") {\r\n            typeError = \"Select type of job\";\r\n        }\r\n\r\n        if (this.state.duration === -1) {\r\n            durationError = \"Select duration of job\";\r\n        }\r\n\r\n        if (this.state.salary === -1) {\r\n            salaryError = \"Enter Salary\";\r\n        }\r\n    \r\n        if (this.state.address === \"\") {\r\n            addressError = \"Address cannot be blank\";\r\n        }\r\n\r\n        if (new Date(this.state.deadline) < new Date().getTime()) {\r\n            deadlineError = \"Deadline cannot be before tomorrow\";\r\n        }\r\n\r\n        if (this.state.appmax < this.state.posmax) {\r\n            appmaxError = \"Maximum number of applications cannot be less than maximum number of positions.\";\r\n        }\r\n    \r\n        if (titleError || typeError || durationError || salaryError\r\n            || addressError || deadlineError || appmaxError) {\r\n            this.setState({ titleError, typeError, durationError, salaryError, addressError, deadlineError, appmaxError });\r\n            return false;\r\n        }\r\n    \r\n        return true;\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        let euser = this.state;\r\n        euser.skills = this.state.skillstr.split(',');\r\n        if(euser.durationstr !== \"\")\r\n        {\r\n            euser.duration = parseInt(euser.durationstr);\r\n        }\r\n        const newJob = {\r\n            recruiter: this.state.userdetails,\r\n            recruiterName: this.state.userdetails.name,\r\n            title: euser.title,\r\n            description: euser.description,\r\n            type: euser.type,\r\n            duration: euser.duration,\r\n            salary: euser.salary,\r\n            posmax: euser.posmax,\r\n            appmax: euser.appmax,\r\n            numpos: euser.numpos,\r\n            numapp: euser.numapp,\r\n            app: euser.app,\r\n            address: euser.address,\r\n            skills: euser.skills,\r\n            rating: euser.rating,\r\n            numrate: euser.numrate,\r\n            dateOfPost: euser.dateOfPost,\r\n            deadline: euser.deadline\r\n        };\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            axios\r\n                .post('http://localhost:4001/job/add_job', newJob)\r\n                .then(response => {\r\n                    console.log(newJob);\r\n                    alert(\"Job added successfully!\");\r\n                    // to refresh\r\n                    this.props.history.push(\"/viewMyActiveJobs\");\r\n                    this.props.history.push(\"/viewMyActiveJobs\");\r\n                    this.props.history.goBack();\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                    alert(\"Job NOT added successfully!\");\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const user = this.state;\r\n        const userRole = this.state.userdetails.role;\r\n        let AddJob;\r\n        if(userRole === \"recruiter\") {\r\n            AddJob = \r\n            <form noValidate onSubmit={this.onSubmit} className=\"form\" >\r\n               <div className=\"allForm\">\r\n                <div className=\"firstHalf\">\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"title\"><h6 className=\"options\">Title</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.title}\r\n                        id=\"title\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.titleError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"description\"><h6 className=\"options\">Description</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.description}\r\n                        id=\"description\"\r\n                        type=\"text\"\r\n                    />\r\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.nameError}\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"skillstr\"><h6 className=\"options\">Skills</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.skillstr}\r\n                        id=\"skillstr\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n               \r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"salary\"><h6 className=\"options\">Salary</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.salary}\r\n                        id=\"salary\"\r\n                        type=\"number\"\r\n                        min=\"-1\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.salaryError}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"durationstr\"><h6 className=\"options\">Duration</h6></label><br></br>\r\n                    <select \r\n                        value={this.state.durationstr} \r\n                        onChange={this.onChange}\r\n                        id=\"durationstr\"\r\n                    >\r\n                        <option value=\"\"> <h6 className=\"options\">Select duration</h6></option>\r\n                        <option value = \"0\" >Indefinite</option>\r\n                        <option value=\"1\">1 month</option>\r\n                        <option value=\"2\">2 months</option>\r\n                        <option value=\"3\">3 months</option>\r\n                        <option value=\"4\">4 months</option>\r\n                        <option value=\"5\">5 months</option>\r\n                        <option value=\"6\">6 months</option>\r\n                    </select>\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.durationError}\r\n                    </div>\r\n                </div> \r\n                </div>\r\n                 <div className=\"half\">\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"posmax\"><h6 className=\"options\"> Max num of positions available</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.posmax}\r\n                        id=\"posmax\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                    />\r\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.nameError}\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"appmax\"> <h6 className=\"options\">Max total num applications allowed</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.appmax}\r\n                        id=\"appmax\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.appmaxError}\r\n                    </div>\r\n                    </div>\r\n                \r\n               \r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"address\"> <h6 className=\"options\">Address</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.address}\r\n                        id=\"address\"\r\n                        type=\"text\"\r\n                    />\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.addressError}\r\n                    </div>\r\n                </div> \r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"deadline\"> <h6 className=\"options\">Deadline (default: 100 days from now)</h6></label><br></br>\r\n                    <input\r\n                        onChange={this.onChange}\r\n                        value={user.deadline}\r\n                        id=\"deadline\"\r\n                        type=\"date\"\r\n                    /> \r\n                    </div>\r\n                <div className=\"input-field col s12\">\r\n                    <label htmlFor=\"type\" ><h6 className=\"options\">Type</h6></label><br></br>\r\n                    <select \r\n                        value={this.state.type} \r\n                        onChange={this.onChange}\r\n                        id=\"type\"\r\n                    >\r\n                        <option value=\"\"><h6 className=\"options\">Select type</h6></option>\r\n                        <option value=\"fullTime\">Full-time</option>\r\n                        <option value=\"partTime\">Part-time</option>\r\n                        <option value=\"wfh\">Work from home</option>\r\n                    </select>\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.typeError}\r\n                    </div>\r\n                </div> \r\n               \r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.deadlineError}\r\n                    </div>\r\n               \r\n                </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"buttonJob\"  >\r\n                    <button className=\"buttonPosition\"\r\n                        style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        // className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                        <h6 className=\"textJob\">Add Job</h6>\r\n                    </button>\r\n                    <br></br>\r\n                </div>\r\n            </form>\r\n        }\r\n        \r\n        return (\r\n            <div >\r\n                <div className=\"jobCard\">\r\n                    <div >\r\n                        <Card >\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    {AddJob}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreateJob.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(CreateJob);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport List from '@material-ui/core/List';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { connect } from \"react-redux\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MyActiveJobs.css\"\r\n\r\n\r\nclass MyActiveJobs extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            users: [],\r\n            applications: [],\r\n            jobs: [],\r\n            sortedJobs: [], \r\n            sortName:true, \r\n            showform: false,\r\n            posmax: -1,\r\n            appmax: -1,\r\n            deadline: new Date(),\r\n            editing: \"\"\r\n        };\r\n        this.deljob = this.deljob.bind(this);\r\n        this.editJob = this.editJob.bind(this);\r\n        this.editJobSubmit = this.editJobSubmit.bind(this);\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n                .then(response => {\r\n                    this.setState({userdetails: response.data});\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n        axios.get('http://localhost:4001/job/get_jobs')\r\n            .then(response => {\r\n                this.setState({jobs: response.data, sortedJobs:response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/user/')\r\n            .then(response => {\r\n                this.setState({users: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/application/get_applications')\r\n            .then(response => {\r\n                this.setState({applications: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    deljob(id) {\r\n        let applicationsArray = this.state.applications;\r\n        let usersArray = this.state.users;\r\n        axios\r\n            .delete('http://localhost:4001/job/del_job/' + id)\r\n            .then(response => {\r\n                alert(\"Job deleted successfully.\");\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n\r\n        applicationsArray.filter(item => item.jobId === id && item.status === \"Accepted\").forEach(\r\n            function(appli) \r\n            {\r\n                const editEmployee = {\r\n                    working: false\r\n                }\r\n                axios\r\n                    .put('http://localhost:4001/user/edit_profile/' + appli.applicantId, editEmployee)\r\n                    .then(response => {\r\n                        console.log(editEmployee);\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log(error);\r\n                    })\r\n            })\r\n    \r\n        applicationsArray.filter(item => item.jobId === id).forEach(\r\n            function(appli) \r\n            {\r\n                let applicant = usersArray.filter(item => item._id === appli.applicantId)[0];\r\n                let nnumapp = +applicant.numapp;\r\n\r\n                if(applicant.working === false)\r\n                {\r\n                    nnumapp = +nnumapp - 1;\r\n                    if(nnumapp < 0) nnumapp = 0;\r\n                }\r\n\r\n                const editApplicant = {\r\n                    numapp: nnumapp\r\n                };\r\n\r\n                axios\r\n                    .put('http://localhost:4001/user/edit_profile/' + appli.applicantId, editApplicant)\r\n                    .then(response => {\r\n                        console.log(editApplicant);\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log(error);\r\n                    })\r\n\r\n                const editAppli = {\r\n                    status: \"Deleted\"\r\n                }\r\n\r\n                axios\r\n                    .put('http://localhost:4001/application/edit_application/' + appli._id, editAppli)\r\n                    .then(response => {\r\n                        console.log(editAppli);\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log(error);\r\n                    })\r\n            })\r\n\r\n        \r\n        // to refresh\r\n        this.props.history.push('/viewMyActiveJobs');\r\n        this.props.history.push('/viewMyActiveJobs');\r\n        this.props.history.goBack();\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    editJob(job) {\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        this.setState({ editing: job._id });\r\n        console.log(this.state.showform);\r\n        this.setState({ appmax: job.appmax });\r\n        this.setState({ posmax: job.posmax });\r\n        if(job.deadline)\r\n        {\r\n            job.deadline = job.deadline.toString();\r\n            job.deadline = job.deadline.substring(0,10);\r\n            this.setState({ deadline: job.deadline });\r\n        }\r\n        // to refresh\r\n        // this.props.history.push('/viewMyActiveJobs');\r\n    }\r\n\r\n    onBack() {\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        this.setState({ editing: \"\" });\r\n        \r\n        // to refresh\r\n        this.props.history.push('/viewMyActiveJobs');\r\n    }\r\n\r\n    editJobSubmit(job) {\r\n        const idToChange = job._id;\r\n        const ind = this.state.jobs.findIndex(x => x._id === idToChange)\r\n        \r\n        if(this.state.deadline)\r\n            this.state.jobs[ind].deadline = this.state.deadline;\r\n        if(this.state.appmax < this.state.posmax)\r\n        {\r\n            alert(\"Max. no. of applications cannot be less than the max. no. of positions.\");\r\n        }\r\n        else\r\n        {\r\n            if(this.state.appmax)\r\n                this.state.jobs[ind].appmax = this.state.appmax;\r\n            if(this.state.posmax)\r\n                this.state.jobs[ind].posmax = this.state.posmax;\r\n            axios\r\n                .put('http://localhost:4001/job/edit_job/' + idToChange, this.state.jobs[ind])\r\n                .then(response => {\r\n                    console.log(this.state.jobs[ind]);\r\n                    this.setState({ editing: \"\" });\r\n                })\r\n                .catch(function(error) {\r\n                    alert(\"Job couldn't be updated!\");\r\n                    console.log(error);\r\n                })\r\n        }\r\n        // to refresh\r\n        \r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        // window.location.reload();\r\n    }\r\n\r\n\r\n    render() \r\n    {\r\n        const userRole = this.state.userdetails.role;\r\n        const userid = this.state.userdetails._id;\r\n        let MyActiveJobs;\r\n        if(userRole === \"recruiter\") {\r\n            MyActiveJobs =\r\n            <div >\r\n                <Grid container className='nav'>\r\n                <Grid >\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\"  >\r\n                       \r\n                    < ListItem text  >\r\n                          <p className='JobList'><h3>My Jobs Listing\r\n                              {/* <Tooltip title=\"Add Job\" aria-label=\"added\" >  \r\n                            <Link to=\"/addJob\"><i className=\"material-icons \"><h1 className=\"icon\"> add</h1></i></Link>\r\n                            </Tooltip> */}\r\n                          </h3>\r\n                           </p>\r\n                          </ListItem>  \r\n                        </List> \r\n                      \r\n                    \r\n                </Grid>\r\n                </Grid>\r\n                <Grid container >\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Paper >\r\n                            <Table  className=\"allTable\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell><p className=\"titleTable\" >Title</p></TableCell>\r\n                                            <TableCell><p className=\"titleTable\" >Date of posting</p></TableCell>\r\n                                            <TableCell><p className=\"titleTable\">Number of Applicants</p></TableCell>\r\n                                            <TableCell><p className=\"titleTable\" >Remaining Number of Positions</p></TableCell>\r\n                                            <TableCell></TableCell> \r\n                                            <TableCell> <Tooltip title=\"Add Job\" aria-label=\"added\" >  \r\n                            <Link to=\"/addJob\"><i className=\"material-icons \"><h1 className=\"icon\"> add</h1></i></Link>\r\n                            </Tooltip></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.jobs.filter(item => item.recruiter === userid && item.numpos < item.posmax).map((job,ind) => (\r\n                                        <TableRow key={ind}>\r\n                                            <TableCell><p className=\"titleTable\" >{job.title}</p></TableCell>\r\n                                            <TableCell><p className=\"titleTable\">{job.dateOfPost.substring(0,10)}</p></TableCell>\r\n                                            <TableCell><p className=\"titleTable\">{job.numapp}</p></TableCell>\r\n                                            <TableCell><p className=\"titleTable\">{job.posmax - job.numpos}</p></TableCell>\r\n                                            \r\n                                                 \r\n                            <Link\r\n                                                 className=\"linkApp\"\r\n                                                    to={{\r\n                                                       \r\n                                                        pathname: \"/appList\",\r\n                                                        state: job._id  // data array of objects\r\n                                                        \r\n                                                    }}\r\n                                                    > <h5 className=\"view\">View applications</h5></Link>\r\n                                                   \r\n                                                \r\n                                            <TableCell>\r\n                                                <Dropdown>\r\n                                                    <Dropdown.Toggle variant=\"secondary\"    />\r\n                                                    <Dropdown.Menu className=\"dropItem\">\r\n                                                        <Dropdown.Item   >\r\n                                                            <Tooltip title=\"Delete Job\" aria-label=\"delete\"  >\r\n                                                                <button\r\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\"\r\n                                                                    onClick={() => this.deljob(job._id)}>\r\n                                                                    <i \r\n                                                                    style={{\r\n                                                                        color: \"#ff7f50\",\r\n                                                                       \r\n                                                                        }}\r\n                                                                        className=\"material-icons\">delete</i>Delete \r\n                                                                </button> \r\n                                                            </Tooltip>\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item>\r\n                                                            <Tooltip title=\"Edit Job\" aria-label=\"edit\">\r\n                                                                <button\r\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \r\n                                                                    onClick={() => this.editJob(job)}>\r\n                                                                    <i \r\n                                                                    style={{\r\n                                                                        color: \"#0000FF\",\r\n                                                                        }}\r\n                                                                        className=\"material-icons\">edit</i>Edit\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                        </Dropdown.Item>\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n                                                 \r\n                                            </TableCell>\r\n                                            <TableCell>                   \r\n                                            <div>\r\n                                            { !this.state.showform || this.state.editing !== job._id? \r\n                                                <div></div>\r\n                                            : \r\n                                                <div>\r\n                                                    <br></br>\r\n                                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                                        <div className=\"input-field col s12\">\r\n                                                            <label htmlFor=\"appmax\"> <p className=\"titleTable\">Maximum number of applications allowed</p></label><br></br>\r\n                                                            <input\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.appmax}\r\n                                                                id=\"appmax\"\r\n                                                                type=\"number\"\r\n                                                                min=\"0\"\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"input-field col s12\">\r\n                                                            <label htmlFor=\"posmax\"><p className=\"titleTable\">Maximum number of positions available</p></label><br></br>\r\n                                                            <input\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.posmax}\r\n                                                                id=\"posmax\"\r\n                                                                type=\"number\"\r\n                                                                min=\"0\"\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"input-field col s12\">\r\n                                                            <label htmlFor=\"deadline\"><p className=\"titleTable\">Deadline for application</p></label><br></br>\r\n                                                            <input\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.deadline}\r\n                                                                id=\"deadline\"\r\n                                                                type=\"date\"\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                                        <button\r\n                                                        style={{\r\n                                                            color: \"coral\",\r\n                                                            }}\r\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                            onClick={() => this.onBack()}>\r\n                                                            <b  >Back</b>\r\n                                                        </button>\r\n                                                        <button\r\n                                                        style={{\r\n                                                            color: \"#009900\",\r\n                                                            }}\r\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                            onClick={() => this.editJobSubmit(job)}>\r\n                                                            <b>Save</b>\r\n                                                        </button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>  \r\n                                            }\r\n                                            </div>\r\n                                            </TableCell>\r\n                                        </TableRow> \r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"activeCard\">\r\n                    <div >\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    {MyActiveJobs}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyActiveJobs.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(MyActiveJobs);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass AppList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            users: [],\r\n            jobs: [],\r\n            applications: [],\r\n            rating: 0,\r\n            sortbyname:true,\r\n            sortbydateofapply:true,\r\n            sortbyrating:true\r\n        };\r\n        this.renderNameIcon = this.renderNameIcon.bind(this);\r\n        this.renderDateOfApplyIcon = this.renderDateOfApplyIcon.bind(this);\r\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\r\n        this.sortByName = this.sortByName.bind(this);\r\n        this.sortByDateOfApply = this.sortByDateOfApply.bind(this);\r\n        this.sortByRating = this.sortByRating.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n                .then(response => {\r\n                    this.setState({userdetails: response.data});\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n        axios.get('http://localhost:4001/job/get_jobs')\r\n            .then(response => {\r\n                this.setState({jobs: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/user/')\r\n            .then(response => {\r\n                this.setState({users: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/application/get_applications')\r\n            .then(response => {\r\n                this.setState({applications: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    getjob(jobId)\r\n    {\r\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\r\n        return job;\r\n    }\r\n\r\n    getapplicant(applicantId)\r\n    {\r\n        let applicant = this.state.users.filter(item => item._id === applicantId)[0];\r\n        return applicant;\r\n    }\r\n\r\n    sortByName(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbyname;\r\n        let uusers = this.state.users;\r\n        function getapplicant(applicantId)\r\n        {\r\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\r\n            return applicant;\r\n        }\r\n        array.sort(function(a, b) {\r\n            console.log(a.applicantId);\r\n            let aapp = getapplicant(a.applicantId);\r\n            let bapp = getapplicant(b.applicantId);\r\n            if(aapp.name !== undefined && bapp.name !== undefined){\r\n                return (1 - +flag*2) * aapp.name.localeCompare(bapp.name);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbyname:!this.state.sortbyname,\r\n        })\r\n    }\r\n\r\n    sortByDateOfApply(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbydateofapply;\r\n        array.sort(function(a, b) {\r\n            if(a.dateOfApply !== undefined && b.dateOfApply !== undefined){\r\n                return (1 - +flag*2) * (new Date(a.dateOfApply) - new Date(b.dateOfApply));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbydateofapply:!this.state.sortbydateofapply,\r\n        })\r\n    }\r\n\r\n    sortByRating(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbyrating;\r\n        let uusers = this.state.users;\r\n        function getapplicant(applicantId)\r\n        {\r\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\r\n            return applicant;\r\n        }\r\n        array.sort(function(a, b) {\r\n            let aapp = getapplicant(a.applicantId);\r\n            let bapp = getapplicant(b.applicantId);\r\n            if(aapp.rating !== undefined && bapp.rating !== undefined){\r\n                return (1 - +flag*2) * (+aapp.rating - +bapp.rating);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbyrating:!this.state.sortbyrating,\r\n        })\r\n    }\r\n\r\n    renderNameIcon(){\r\n        if(this.state.sortbyname){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderDateOfApplyIcon(){\r\n        if(this.state.sortbydateofapply){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderRatingIcon(){\r\n        if(this.state.sortbyrating){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    shortlist(application) {\r\n        const editApplication = {\r\n            status: \"Shortlisted\"\r\n        };\r\n\r\n        axios\r\n            .put('http://localhost:4001/application/edit_application/' + application._id, editApplication)\r\n            .then(response => {\r\n                console.log(editApplication);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n            window.location.reload();\r\n    }\r\n\r\n    accept(application) {\r\n        let job = this.getjob(application.jobId);\r\n        if(job.numpos === job.posmax)\r\n        {\r\n            alert(\"All positions are filled!\");\r\n            return;\r\n        }\r\n        else if(job.numpos === job.posmax - 1)\r\n        {\r\n            this.state.applications.filter(item => item.applicantId !== application.applicantId && item.jobId === application.jobId && item.status !== \"Deleted\" && item.status !== \"Accepted\").forEach(\r\n                function(appli)\r\n                {\r\n                    // let temp = job;\r\n                    const tempAppli = {\r\n                        status: \"Rejected\"\r\n                    }\r\n                    // let newNumApp = +temp.numapp - 1;\r\n                    // if(newNumApp < 0) newNumApp = 0;\r\n                    // const tempJob = {\r\n                    //     numapp: newNumApp\r\n                    // }\r\n                    axios\r\n                        .put('http://localhost:4001/application/edit_application/' + appli._id, tempAppli)\r\n                        .then(response => {\r\n                            console.log(tempAppli);\r\n                        })\r\n                        .catch(function(error) {\r\n                            console.log(error);\r\n                        })\r\n                    // axios\r\n                    //     .put('http://localhost:4000/job/edit_job/' + temp._id, tempJob)\r\n                    //     .then(response => {\r\n                    //         console.log(tempJob);\r\n                    //     })\r\n                    //     .catch(function(error) {\r\n                    //         console.log(error);\r\n                    //     })\r\n                })\r\n        }\r\n        let nnumpos = +job.numpos + 1;\r\n\r\n        const editApplicant = {\r\n            working: true,\r\n            numapp: 0\r\n        };\r\n\r\n        const editJob = {\r\n            numpos: nnumpos\r\n        };\r\n\r\n        const editApplication = {\r\n            status: \"Accepted\",\r\n            doj: new Date()\r\n        };\r\n\r\n        axios\r\n            .put('http://localhost:4001/job/edit_job/' + job._id, editJob)\r\n            .then(response => {\r\n                console.log(editJob);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios\r\n            .put('http://localhost:4001/application/edit_application/' + application._id, editApplication)\r\n            .then(response => {\r\n                console.log(editApplication);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        \r\n        axios\r\n            .put('http://localhost:4001/user/edit_profile/' + application.applicantId, editApplicant)\r\n            .then(response => {\r\n                console.log(editApplicant);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        let alljobs = this.state.jobs;\r\n        this.state.applications.filter(item => item.applicantId === application.applicantId && item._id !== application._id && item.status !== \"Deleted\").forEach(\r\n            function(appli)\r\n            {\r\n                // let appliJob = alljobs.filter(item => item._id === appli.jobId)[0];\r\n                const editAppli = {\r\n                    status: \"Rejected\"\r\n                }\r\n                // let napp = +appliJob.numapp - 1;\r\n                // if(napp < 0) napp = 0;\r\n                // const editAppliJob = {\r\n                //     numapp: napp\r\n                // }\r\n                axios\r\n                    .put('http://localhost:4001/application/edit_application/' + appli._id, editAppli)\r\n                    .then(response => {\r\n                        console.log(editAppli);\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log(error);\r\n                    })\r\n                // axios\r\n                //     .put('http://localhost:4000/job/edit_job/' + appliJob._id, editAppliJob)\r\n                //     .then(response => {\r\n                //         console.log(editAppliJob);\r\n                //     })\r\n                //     .catch(function(error) {\r\n                //         console.log(error);\r\n                //     })\r\n            })\r\n\r\n        this.props.history.push('/appList');\r\n        this.props.history.push('/');\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    reject(application) {\r\n        // const { user } = this.props.auth;\r\n        // let job = this.getjob(application.jobId);\r\n        let applicant = this.getapplicant(application.applicantId);\r\n        // let job = this.getjob(application.jobId);\r\n        let nnumapp = +applicant.numapp - 1;\r\n        // let jnumapp = +job.numapp - 1;\r\n\r\n        if(nnumapp < 0) nnumapp = 0;\r\n        // if(jnumapp < 0) jnumapp = 0;\r\n\r\n        const editApplicant = {\r\n            numapp: nnumapp\r\n        };\r\n\r\n        const editApplication = {\r\n            status: \"Rejected\"\r\n        };\r\n\r\n        // const editJob = {\r\n        //     numapp: jnumapp\r\n        // };\r\n\r\n        axios\r\n            .put('http://localhost:4001/application/edit_application/' + application._id, editApplication)\r\n            .then(response => {\r\n                console.log(editApplication);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n\r\n        // axios\r\n        //     .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\r\n        //     .then(response => {\r\n        //         console.log(editJob);\r\n        //     })\r\n        //     .catch(function(error) {\r\n        //         console.log(error);\r\n        //     })\r\n        \r\n        axios\r\n            .put('http://localhost:4001/user/edit_profile/' + application.applicantId, editApplicant)\r\n            .then(response => {\r\n                console.log(editApplicant);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n\r\n        this.props.history.push('/appList');\r\n        this.props.history.push('/appList');\r\n        this.props.history.goBack();;\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { user } = this.props.auth;\r\n        const userRole = this.state.userdetails.role;\r\n        let Applications;\r\n        if(userRole === \"recruiter\") {\r\n            Applications =\r\n            <div>\r\n                <Grid>\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                        <ListItem text>\r\n                            <h3>Applications</h3>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n                </Grid>\r\n                <Grid>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        {/* <Paper> */}\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell>Title</TableCell>\r\n                                            <TableCell>Applicant <Button onClick={this.sortByName}>{this.renderNameIcon()}</Button></TableCell>\r\n                                            <TableCell>Appl. Rating <Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button></TableCell>\r\n                                            <TableCell>Appl. Skills</TableCell>\r\n                                            <TableCell><ul><li>Education</li></ul></TableCell>\r\n                                            <TableCell>SOP</TableCell>\r\n                                            <TableCell>Status</TableCell>\r\n                                            <TableCell>Date of Application <Button onClick={this.sortByDateOfApply}>{this.renderDateOfApplyIcon()}</Button></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                            <TableCell></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.applications.filter(item => item.status !== \"Rejected\" && item.recruiterId === user.id && item.jobId === this.props.location.state).map((application,ind) => (\r\n                                        <TableRow key={ind}>\r\n                                            <TableCell>{application.title}</TableCell>\r\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\r\n                                                <TableCell key={innd}>{applicant.name}</TableCell>\r\n                                            ))}\r\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\r\n                                                <TableCell key={innd}>{applicant.rating ? applicant.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\r\n                                            ))}\r\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\r\n                                                <TableCell key={innd}>{applicant.skills.join(\", \")}</TableCell>\r\n                                            ))}\r\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\r\n                                                <TableCell key={innd}>\r\n                                                    {\r\n                                                        applicant.education.map(ed => (\r\n                                                            <ul>\r\n                                                                <li>School: {ed.school}</li>\r\n                                                                <li>Degree: {ed.degree}</li>\r\n                                                                <li>Start date: {ed.startdate ? ed.startdate.toString().substring(0, 10): \"NA\"}</li>\r\n                                                                <li>End date: {ed.enddate ? ed.enddate.toString().substring(0, 10):\"NA\"}</li>\r\n                                                            </ul>\r\n                                                        ))\r\n                                                    }\r\n                                                </TableCell>\r\n                                            ))}\r\n                                            <TableCell>{application.sop}</TableCell>\r\n                                            <TableCell>{application.status}</TableCell>\r\n                                            <TableCell>{application.dateOfApplication.substring(0, 10)}</TableCell>\r\n                                           \r\n                                            {application.status === \"Applied\"?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Shortlist Candidate\" aria-label=\"apply\">\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.shortlist(application)}>\r\n                                                        Shortlist\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n\r\n                                            <div></div>\r\n\r\n                                            }\r\n                                            {application.status === \"Shortlisted\"?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Accept Candidate\" aria-label=\"apply\">\r\n                                                    <button\r\n                                                        className=\"btn btn-success btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.accept(application)}>\r\n                                                        Accept\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n\r\n                                            <div></div>\r\n\r\n                                            }\r\n                                            {application.status === \"Accepted\"?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Reject Candidate\" aria-label=\"apply\">\r\n                                                    <button\r\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        >\r\n                                                        Accepted\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n\r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Rate this job\" aria-label=\"apply\">\r\n                                                    <button\r\n                                                        className=\"btn btn-danger btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.reject(application)}>\r\n                                                        Reject\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            }\r\n                                            \r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        {/* </Paper>                */}\r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        }\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                {Applications}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAppList.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(AppList);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport List from '@material-ui/core/List';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport \"./Employees.css\"\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Employees extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userdetails: [],\r\n            users: [],\r\n            jobs: [],\r\n            applications: [],\r\n            rating: 0,\r\n            sortbyname:true,\r\n            sortbytitle:true,\r\n            sortbyrating:true,\r\n            sortbydateofjoin: true\r\n        };\r\n        this.giveRating = this.giveRating.bind(this);\r\n        this.renderNameIcon = this.renderNameIcon.bind(this);\r\n        this.sortByName = this.sortByName.bind(this);\r\n        this.renderTitleIcon = this.renderTitleIcon.bind(this);\r\n        this.sortByTitle = this.sortByTitle.bind(this);\r\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\r\n        this.sortByRating = this.sortByRating.bind(this);\r\n        this.sortByDateOfJoin = this.sortByDateOfJoin.bind(this);\r\n        this.renderDateOfJoinIcon = this.renderDateOfJoinIcon.bind(this);\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4001/user/'+ user.id)\r\n            .then(response => {\r\n                this.setState({userdetails: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/job/get_jobs')\r\n            .then(response => {\r\n                this.setState({jobs: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/user/')\r\n            .then(response => {\r\n                this.setState({users: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        axios.get('http://localhost:4001/application/get_applications')\r\n            .then(response => {\r\n                this.setState({applications: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n            errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    rated(application) {\r\n        if(application.applicantRating !== -1) return true;\r\n        return false;\r\n    }\r\n\r\n    giveRating(e) {\r\n        console.log(e.target.value);\r\n        this.setState({rating: e.target.value});\r\n    }\r\n\r\n    getjob(jobId)\r\n    {\r\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\r\n        return job;\r\n    }\r\n\r\n    getapplicant(applicantId)\r\n    {\r\n        let applicant = this.state.users.filter(item => item._id === applicantId)[0];\r\n        console.log(applicant);\r\n        return applicant;\r\n    }\r\n\r\n    sortByRating(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbyrating;\r\n        let uusers = this.state.users;\r\n        function getapplicant(applicantId)\r\n        {\r\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\r\n            return applicant;\r\n        }\r\n        array.sort(function(a, b) {\r\n            let aapp = getapplicant(a.applicantId);\r\n            let bapp = getapplicant(b.applicantId);\r\n            if(aapp.rating !== undefined && bapp.rating !== undefined){\r\n                return (1 - +flag*2) * (+aapp.rating - +bapp.rating);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbyrating:!this.state.sortbyrating,\r\n        })\r\n    }\r\n\r\n    renderRatingIcon(){\r\n        if(this.state.sortbyrating){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    sortByName(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbyname;\r\n        let uusers = this.state.users;\r\n        function getapplicant(applicantId)\r\n        {\r\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\r\n            return applicant;\r\n        }\r\n        array.sort(function(a, b) {\r\n            console.log(a.applicantId);\r\n            let aapp = getapplicant(a.applicantId);\r\n            let bapp = getapplicant(b.applicantId);\r\n            if(aapp !== undefined && bapp !== undefined && aapp.name !== undefined && bapp.name !== undefined){\r\n                return (1 - +flag*2) * aapp.name.localeCompare(bapp.name);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbyname:!this.state.sortbyname,\r\n        })\r\n    }\r\n\r\n    renderNameIcon(){\r\n        if(this.state.sortbyname){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    sortByTitle(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbytitle;\r\n        let jjobs = this.state.jobs;\r\n        function getjob(jobId)\r\n        {\r\n            let job = jjobs.filter(item => item._id === jobId)[0];\r\n            return job;\r\n        }\r\n        array.sort(function(a, b) {\r\n            let aapp = getjob(a.jobId);\r\n            let bapp = getjob(b.jobId);\r\n            if(aapp.title !== undefined && bapp.title !== undefined){\r\n                return (1 - +flag*2) * aapp.title.localeCompare(bapp.title);\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbytitle:!this.state.sortbytitle,\r\n        })\r\n    }\r\n\r\n    renderTitleIcon(){\r\n        if(this.state.sortbytitle){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    sortByDateOfJoin(){\r\n        var array = this.state.applications;\r\n        var flag = this.state.sortbydateofjoin;\r\n        array.sort(function(a, b) {\r\n            if(a.dateOfJoin !== undefined && b.dateOfJoin !== undefined){\r\n                return (1 - +flag*2) * (new Date(a.dateOfJoin) - new Date(b.dateOfJoin));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            applications:array,\r\n            sortbydateofjoin:!this.state.sortbydateofjoin,\r\n        })\r\n    }\r\n\r\n    renderDateOfJoinIcon(){\r\n        if(this.state.sortbydateofjoin){\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    rate(application)\r\n    {\r\n        let applicant = this.getapplicant(application.applicantId);\r\n        console.log(applicant._id);\r\n        let nrate = applicant.numrate;\r\n        nrate = nrate + 1;\r\n        let nrating = 0;\r\n        if(applicant.rating === -1)\r\n        {\r\n            nrating = +this.state.rating;\r\n        }\r\n        else\r\n        {\r\n            nrating = ((+applicant.rating * (+nrate-1)) + +this.state.rating) / (+nrate);\r\n        }\r\n\r\n        const editApplicant = {\r\n            rating: nrating,\r\n            numrate: nrate\r\n        };\r\n\r\n        const editApplication = {\r\n            applicantRating: nrating\r\n        };\r\n\r\n        axios\r\n            .put('http://localhost:4001/user/edit_profile/' + applicant._id, editApplicant)\r\n            .then(response => {\r\n                console.log(editApplicant);\r\n                alert(\"Applicant rated successfully!\");\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n                alert(\"Applicant could not be rated.\");\r\n            })\r\n\r\n        axios\r\n            .put('http://localhost:4001/application/edit_application/' + application._id, editApplication)\r\n            .then(response => {\r\n                console.log(editApplication);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n\r\n        window.location.reload();\r\n    \r\n    }\r\n\r\n    render() \r\n    {\r\n        const { user } = this.props.auth;\r\n        const userRole = this.state.userdetails.role;\r\n        let Myemployees;\r\n        if(userRole === \"recruiter\") {\r\n            Myemployees =\r\n            <div>\r\n                <Grid container className=\"gridEmployee\">\r\n                <Grid item xs={12} md={3} lg={3}>\r\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\r\n                        <ListItem text>\r\n                            <h3 className='employee'>Employees</h3>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n                </Grid>\r\n                <Grid container  >\r\n                    <Grid item xs={12} md={12} lg={12} >\r\n                        <Paper>\r\n                            <Table className=\"tableEmployee\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell><p className='TableName'>Name</p> <Button  onClick={this.sortByName}><h2 className='NameIcon'>{this.renderNameIcon()}</h2></Button></TableCell>\r\n                                        <TableCell><p className='TableName'>Employee Rating</p> <Button onClick={this.sortByRating}><h2 className='NameIcon'>{this.renderRatingIcon()}</h2></Button></TableCell>\r\n                                        <TableCell><p className='TableName'>Job Title</p> <Button onClick={this.sortByTitle}><h2 className='NameIcon'>{this.renderTitleIcon()}</h2></Button></TableCell>\r\n                                       \r\n                                        <TableCell> <p className='TableName'>DOJ</p> <Button onClick={this.sortByDateOfJoin}><h2 className='NameIcon'>{this.renderDateOfJoinIcon()}</h2></Button></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.applications.filter(item => item.status === \"Accepted\" && item.recruiterId === user.id).map((application,ind) => (\r\n                                        <TableRow key={ind}>\r\n                                            \r\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\r\n                                                <TableCell key={innd}>{applicant.name}</TableCell>\r\n                                            ))}\r\n\r\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\r\n                                                <TableCell key={innd}>{applicant.rating ? applicant.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\r\n                                            ))}\r\n                                            \r\n                                            {this.state.jobs.filter(item => item._id === application.jobId).map((job,innnd) => (\r\n                                                <TableCell key={innnd}>\r\n                                                    {job.title}\r\n                                                </TableCell>\r\n                                            ))}\r\n\r\n                                            {this.state.jobs.filter(item => item._id === application.jobId).map((job,innnd) => (\r\n                                                <TableCell key={innnd}>\r\n                                                    {job.type}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                            <TableCell>{application.doj?application.doj.substring(0, 10):\"\"}</TableCell>\r\n                                            {!this.rated(application)?\r\n                                            \r\n                                            <TableCell>\r\n                                                <Rating\r\n                                                    value={this.state.rating}\r\n                                                    onChange={this.giveRating}\r\n                                                />\r\n                                                <Tooltip title=\"Rate this employee\" aria-label=\"rate\">\r\n                                                    <button\r\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.rate(application)}>\r\n                                                        Rate Employee\r\n                                                    </button> \r\n                                                </Tooltip>                                            \r\n                                            </TableCell>\r\n\r\n                                            :\r\n\r\n                                            <TableCell>\r\n                                                <div>Rated</div>                                           \r\n                                            </TableCell>\r\n\r\n                                            }\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>            \r\n            </div>\r\n        }\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\r\n                <div className=\"cardEmployee\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    {Myemployees}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEmployees.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Employees);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport UsersList from './components/Users/UsersList'\r\nimport Home from './components/Common/Home'\r\nimport Register from './components/Common/Register'\r\nimport Login from './components/Common/Login'\r\nimport Navbar from './components/templates/Navbar'\r\nimport Profile from './components/Users/Profile'\r\nimport EditProfile from './components/Users/EditProfile'\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/Users/Dashboard\";\r\nimport AddEducation from \"./components/Applicant/AddEducation\";\r\nimport JobsList from \"./components/Applicant/JobsList\";\r\nimport MyApplications from \"./components/Applicant/MyApplications\";\r\nimport CreateJob from \"./components/Recruiter/CreateJob\";\r\nimport MyActiveJobs from \"./components/Recruiter/MyActiveJobs\";\r\nimport AppList from \"./components/Recruiter/AppList\";\r\nimport Employees from \"./components/Recruiter/Employees\";\r\n\r\n\r\n// document.body.style = 'background: #D5D5D5;';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div>\r\n          <Navbar/>\r\n          <br/>\r\n          <Route path=\"/\" exact component={Home}/>\r\n          <Route path=\"/users\" exact component={UsersList}/>\r\n          <Route path=\"/register\" component={Register}/>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Switch>\r\n              <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\r\n              <PrivateRoute path=\"/profile\" exact component={Profile} />\r\n              <PrivateRoute path=\"/editprofile\" exact component={EditProfile} />\r\n              <PrivateRoute path=\"/addeducation\" exact component={AddEducation} />\r\n              <PrivateRoute path=\"/addJob\" exact component={CreateJob} />\r\n              <PrivateRoute path=\"/viewMyActiveJobs\" exact component={MyActiveJobs} />\r\n              <PrivateRoute path=\"/employees\" exact component={Employees} />\r\n              <PrivateRoute path=\"/jobsList\" exact component={JobsList} />\r\n              <PrivateRoute path=\"/myApplications\" exact component={MyApplications} />\r\n              <PrivateRoute path=\"/appList\" exact component={AppList} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}